 create the basic structure of react components and export them from that file
 create basic react component structre and export them from that file
 import all react component to app.js file
 Intro to Tailwind CSS
    The benefit of using Tailwind CSS is that we don't have to write any styles manually in a CSS stylesheet. All we have to do is combine multiple classes to create the appearance that we want.   For example, to give our portfolio a dark background with gray text applied to all of our child components, you can add the following classes to our main element:
Build the About Component
Build the Projects Component
Build the Skills Component
    This will consist of a simple list of all of the major tools that we're familiar with and can use in our employers or clients projects.

    Once again, we are going to import an array from our data folder. But this array consists of number of strings which represent each of the skills that we know such as JavaScript, React, and Node:
How to Build the Testimonials Component
    In the Testimonials component, we are going to list a couple of testimonials maybe from past clients or people who are familiar with our work.

    These are going to consist of a couple of cards that feature the testimonial itself as well as who it's from and the company that this person is from.

    We are also importing a testimonials array with a number of objects that feature the quote, image, name, and company.
How to Build the Contact Component
    At the end of our landing page, we're going to include our contact form to allow potential employers to reach out to us.

    This form will have 3 inputs: a name, email, and message input.

    To receive these form submissions, we will use the tool Netlify Forms to very easily take care of saving those messages.
How to Embed a Google Maps Location
    To the left of the form we will include a Google Maps embedded Google map of where we are located.

    We can do so with the help of an online tool: embed-map.com. All you have to do is just enter your location and hit "Generate HTML code".

    In the code we are given, don't copy all of the code, just the src attribute from the iframe element. We will replace that value with the default src value we have for our iframe.
    Note: To send over any submitted form data to Netlify, Netlify Forms needs to recognize a form as static HTML. Because our React app is controlled by JavaScript and doesn't consist of plain HTML, we need to add a hidden form to our index.html file in the public folder.

How to Submit the Contact Form

    Once that's done, we'll head back to Contact.js. We're going to use JavaScript in order to submit this form.

    First of all, we're going to create some dedicated state for each of the values that are typed in the form for name, email, and message:

    const [name, setName] = React.useState("");
    const [email, setEmail] = React.useState("");
    const [message, setMessage] = React.useState("");
    We will store what the user types in to each of the inputs in state with the help of the onChange handler.

    To handle submission of the form, we will add the onSubmit prop to it. The function that will be called, handleSubmit, will make a post request to the endpoint "/" with all of our form data.

    We will set the headers of the request to indicate that we are sending over form data. For the request body, we will include the form name as well as all of the form data from the name, email, and message state variables.
    As you can see above, we are encoding the form data with a special encode function that you see here.

    If the message is sent correctly, we will display an alert that says "Message sent". Otherwise if there is an error, we are going to alert the user of that error.

